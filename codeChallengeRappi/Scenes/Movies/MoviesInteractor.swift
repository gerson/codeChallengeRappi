//
//  MoviesInteractor.swift
//  codeChallengeRappi
//
//  Created by Gerson Villanueva on 09/12/2018.
//  Copyright (c) 2018 rappi. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import RealmSwift

protocol MoviesBusinessLogic {
  func fetchMovies(request: Movies.Request)
}

protocol MoviesDataStore {
  //var name: String { get set }
}

class MoviesInteractor: MoviesBusinessLogic, MoviesDataStore {
  var presenter: MoviesPresentationLogic?
  var worker: MoviesWorker?
  
  func fetchMovies(request: Movies.Request) {
    var response = Movies.Response(movies: [])
    worker = MoviesWorker()
    worker?.fetchByCategoy(category: request.category, completion: {[weak self] (results: [Movie]) in
        response.movies = results
        self?.presenter?.presentMovies(response: response)
    }, failure: { (err: Error) in
        print(err)
    })
  }
}
