//
//  SeriesPresenterTests.swift
//  codeChallengeRappi
//
//  Created by Gerson Villanueva on 13/12/2018.
//  Copyright (c) 2018 rappi. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import codeChallengeRappi
import XCTest

class SeriesPresenterTests: XCTestCase {
  // MARK: Subject under test
  
  var sut: SeriesPresenter!
  
  // MARK: Test lifecycle
  
  override func setUp() {
    super.setUp()
    setupSeriesPresenter()
  }
  
  override func tearDown() {
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupSeriesPresenter() {
    sut = SeriesPresenter()
  }
  
  // MARK: Test doubles
  
  class SeriesDisplayLogicSpy: SeriesDisplayLogic {
    
    var displaySeriesCalled = false
    
    func displaySeries(viewModel: Series.ViewModel) {
        displaySeriesCalled = true
    }
  }
  
  // MARK: Tests
  
  func testPresentSeries() {
    // Given
    let spy = SeriesDisplayLogicSpy()
    sut.viewController = spy
    let serie1 = Serie(); serie1.serieId = 1; serie1.name = "Test"
    let serie2 = Serie(); serie2.serieId = 2; serie2.name = "Test 2"
    let response = Series.Response(series: [serie1, serie2])
    
    // When
    sut.presentSeries(response: response)
    
    // Then
    XCTAssertTrue(spy.displaySeriesCalled, "presentSeries(response:) should ask the view controller to display the result")
  }
}
